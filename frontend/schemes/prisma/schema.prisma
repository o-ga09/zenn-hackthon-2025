// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ユーザー
model User {
  id                String    @id @map("id")
  version           Int       @default(0) @map("version")
  createDatetime    DateTime  @default(now()) @map("create_datetime")
  updateDatetime    DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime    DateTime? @map("delete_datetime")
  
  // リレーション
  userDetails       UserDetail[]
  userSocialAccounts UserSocialAccount[]
  userGroups        UserGroup[]
  invitedGroups     UserGroup[]     @relation("InvitedUser")
  followers         UserRelationship[] @relation("Follower")
  following         UserRelationship[] @relation("Following")
  travels           Travel[]

  @@map("users")
}

// ユーザー詳細
model UserDetail {
  id              String    @id @map("id")
  userId          String    @map("user_id")
  name            String    @map("name")
  displayName     String    @map("display_name")
  uid             String    @unique @map("uid")
  birthday        DateTime? @map("birthday")
  gender          Int?      @map("gender")
  profileUrl      String?   @map("profile_url")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  userType        String    @default("550e8400-e29b-41d4-a716-446655440001") @map("user_type")
  
  // リレーション
  user            User      @relation(fields: [userId], references: [id])

  @@map("user_details")
}

// ユーザーソーシャルアカウント
model UserSocialAccount {
  id              String    @id @map("id")
  userId          String    @map("user_id")
  profileUrl      String    @map("profile_url")
  xUrl            String    @map("x_url")
  instagramUrl    String    @map("instagram_url")
  facebookUrl     String    @map("facebook_url")
  youtubeUrl      String    @map("youtube_url")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  
  // リレーション
  user            User      @relation(fields: [userId], references: [id])

  @@map("user_social_accounts")
}

// ユーザーグループ
model UserGroup {
  id              String    @id @map("id")
  userId          String    @map("user_id")
  groupId         String    @map("group_id")
  invitedUserId   String    @map("invited_user_id")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  
  // リレーション
  user            User      @relation(fields: [userId], references: [id])
  invitedUser     User      @relation("InvitedUser", fields: [invitedUserId], references: [id])

  @@map("user_groups")
}

// フォロー関係
model UserRelationship {
  id              String    @id @map("id")
  userId          String    @map("user_id")
  followId        String    @map("follow_id")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  
  // リレーション
  user            User      @relation("Following", fields: [userId], references: [id])
  follow          User      @relation("Follower", fields: [followId], references: [id])

  @@map("user_relationships")
}

// 旅行
model Travel {
  id              String    @id @map("id")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  userId          String    @map("user_id")
  version         Int       @default(0) @map("version")
  title           String    @map("title")
  description     String    @map("description")
  startDate       DateTime  @map("start_date")
  endDate         DateTime  @map("end_date")
  sharedId        String    @map("shared_id")
  thumbnail       String    @map("thumbnail")
  
  // リレーション
  user            User      @relation(fields: [userId], references: [id])
  memories        Memory[]
  locations       Location[]
  costs           Cost[]

  @@map("travels")
}

// 思い出
model Memory {
  id              String    @id @map("id")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  travelId        String    @map("travel_id")
  photoUrl        String    @map("photo_url")
  description     String    @map("description")
  date            DateTime  @map("date")
  
  // リレーション
  travel          Travel    @relation(fields: [travelId], references: [id])

  @@map("memories")
}

// 位置情報
model Location {
  id              String    @id @map("id")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  travelId        String    @map("travel_id")
  latitude        Decimal   @map("latitude")
  longitude       Decimal   @map("longitude")
  movingWay       String    @map("moving_way")
  leftTime        DateTime  @map("left_time")
  arrivedTime     DateTime  @map("arrived_time")
  title           String    @map("title")
  description     String    @map("description")
  thumbnail       String    @map("thumbnail")
  
  // リレーション
  travel          Travel    @relation(fields: [travelId], references: [id])

  @@map("locations")
}

// 費用
model Cost {
  id              String    @id @map("id")
  createDatetime  DateTime  @default(now()) @map("create_datetime")
  updateDatetime  DateTime  @default(now()) @updatedAt @map("update_datetime")
  deleteDatetime  DateTime? @map("delete_datetime")
  travelId        String    @map("travel_id")
  date            DateTime  @map("date")
  item            String    @map("item")
  description     String    @map("description")
  specify         String    @map("specify")
  amount          Int       @map("amount")
  
  // リレーション
  travel          Travel    @relation(fields: [travelId], references: [id])

  @@map("costs")
}

// お知らせ
model Announcement {
  id        String   @id @map("id")
  slug      String   @unique @map("slug")
  title     String   @map("title")
  content   String   @map("content") @db.Text
  tag       String?  @map("tag")
  icon      String?  @map("icon")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")
  version   Int      @default(1) @map("version")

  @@map("announcements")
}